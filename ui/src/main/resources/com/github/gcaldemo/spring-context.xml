<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:security="http://www.springframework.org/schema/security"       xmlns:context="http://www.springframework.org/schema/context"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:util="http://www.springframework.org/schema/context"       xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd        http://www.springframework.org/schema/security        http://www.springframework.org/schema/security/spring-security-3.1.xsd        http://www.springframework.org/schema/context        http://www.springframework.org/schema/context/spring-context-3.2.xsd">    <!--        Service dependencies    -->    <context:component-scan base-package="com.github.gcaldemo.calendar"/>    <import resource="classpath:com/github/gcaldemo/calendar/spring-context.xml"/>    <!--        Environment specific configuration    -->    <util:property-placeholder location="classpath:com/github/gcaldemo/application.properties"/>    <!--        Security configuration    -->    <!-- We do not auto configuration as we want a custom authentication mechanism which requires modifying the filter chain -->    <security:http auto-config="false" entry-point-ref="authenticationEntryPoint">        <!-- Spring security OAuth 2 does not allow anonymous access so we have to grant access only to authenticated users -->        <security:intercept-url pattern="/**" access="ROLE_USER" />        <!-- ensure we put gcaldemo system credentials into the security context before the anonymous filter does -->        <security:custom-filter ref="authProcessingFilter" before="ANONYMOUS_FILTER"/>        <security:custom-filter ref="oauth2ClientFilter" after="EXCEPTION_TRANSLATION_FILTER"/>    </security:http>    <!--        This is a dummy authentication entry point that just serves as an empty default entry point as we cannot use        default http security configuration.    -->    <bean id="authenticationEntryPoint" class="com.github.gcaldemo.auth.SystemAuthenticationEntryPoint"/>    <security:authentication-manager alias="defaultAuthenticationManager">        <security:authentication-provider ref="authenticationProvider"/>    </security:authentication-manager>    <bean id="authProcessingFilter" class="com.github.gcaldemo.auth.SystemAuthenticationProcessingFilter">        <property name="authenticationManager" ref="defaultAuthenticationManager"/>    </bean>    <!--        BEWARE:        *******        This authentication provider is used here to simplify the demo application.        Use a *real* authentication provider in production!     -->    <bean id="authenticationProvider" class="org.springframework.security.authentication.TestingAuthenticationProvider"/></beans>
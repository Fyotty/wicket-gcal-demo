package com.github.gcaldemo.application;import com.github.gcaldemo.pages.HomePage;import de.agilecoders.wicket.Bootstrap;import de.agilecoders.wicket.settings.BootstrapSettings;import org.apache.wicket.Application;import org.apache.wicket.DefaultExceptionMapper;import org.apache.wicket.Page;import org.apache.wicket.protocol.http.WebApplication;import org.apache.wicket.request.IExceptionMapper;import org.apache.wicket.spring.injection.annot.SpringComponentInjector;import org.apache.wicket.util.IProvider;import org.wicketstuff.annotation.scan.AnnotatedMountScanner;/** * Wicket application entry point for the Calendar demo. */public class CalendarDemoApplication extends WebApplication {    private IProvider<IExceptionMapper> exceptionMapperProvider;    @Override    public Class<? extends Page> getHomePage() {        return HomePage.class;    }    @Override    protected void init() {        super.init();        this.exceptionMapperProvider = new OAuth2ExceptionMapperProvider();        getComponentInstantiationListeners().add(new SpringComponentInjector(this));        //remove wicket:extend and wicket:child tags (layout inheritance)        getMarkupSettings().setStripWicketTags(true);        new AnnotatedMountScanner().scanPackage("com.github.gcaldemo.pages").mount(this);        Bootstrap.install(Application.get(), new BootstrapSettings());    }    @Override    public IProvider<IExceptionMapper> getExceptionMapperProvider() {        return exceptionMapperProvider;    }    /**     * Custom Exception Mapper provider that integrates the OAuth2ExceptionMapper into the application.     */    private static class OAuth2ExceptionMapperProvider implements IProvider<IExceptionMapper> {        @Override        public IExceptionMapper get() {            return new OAuth2ExceptionMapper(new DefaultExceptionMapper());        }    }}